"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[271],{2268:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var s=r(5893),t=r(1151);const o={sidebar_position:5},i=void 0,c={id:"Systemes/Github Action Runner",title:"Github Action Runner",description:"Pour relier github \xe0 votre serveur vous pouvez mettre en place un Github action, il n\xe9cessite deux actions :",source:"@site/docs/Systemes/Github Action Runner.md",sourceDirName:"Systemes",slug:"/Systemes/Github Action Runner",permalink:"/DevopsExplorerDemo/docs/Systemes/Github Action Runner",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"System.d Services",permalink:"/DevopsExplorerDemo/docs/Systemes/Systemd Services"},next:{title:"Nginx",permalink:"/DevopsExplorerDemo/docs/Systemes/Nginx"}},l={},u=[{value:"Cr\xe9ation d&#39;un service planifi\xe9 avec workflows:",id:"cr\xe9ation-dun-service-planifi\xe9-avec-workflows",level:3}];function a(e){const n={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Pour relier github \xe0 votre serveur vous pouvez mettre en place un Github action, il n\xe9cessite deux actions :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Installer un runnner sur votre vm serveur reli\xe9 au d\xe9p\xf4t Github concern\xe9 en ex\xe9cutant les instructions depuis l\u2019interface de Github ( Settings \u2192 Actions \u2192 Runners \u2192New self-hosted runner. )"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Lancer le runner en tant que service avec ",(0,s.jsx)(n.code,{children:"sudo ./svc install"})," et ",(0,s.jsx)(n.code,{children:"systemctl start actions.runner......"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Cr\xe9er dans votre d\xe9p\xf4t un r\xe9pertoire .github/workflows/ et y placer un fichier yml, par exemple workflow.yml avec le contenu suivant :"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"name: Deploy Ansible Project\r\n\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n  workflow_dispatch:\r\n\r\njobs:\r\n  deploy:\r\n    runs-on: self-hosted\r\n    steps:\r\n      - name: Checkout Repository\r\n        uses: actions/checkout@v2\r\n\r\n      - name: Deploy Ansible Project\r\n        working-directory: /home/student/challenge-s08-e01-bis-sameddemet/ansible\r\n        run: |\r\n          ansible-playbook playbooks/recette.yml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"cr\xe9ation-dun-service-planifi\xe9-avec-workflows",children:"Cr\xe9ation d'un service planifi\xe9 avec workflows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"name: Scheduled Workflow\r\n\r\non:\r\n  schedule:\r\n    - cron: '*/5 * * * *'   # D\xe9clenche toutes les 5 minutes\r\n  workflow_dispatch:        # Permet d'ex\xe9cuter manuellement le workflow\r\n\r\njobs:\r\n  build:\r\n    runs-on: self-hosted\r\n    steps:\r\n      - name: Checkout Repository\r\n        uses: actions/checkout@v2\r\n\r\n      - name: Run Script\r\n        run: |\r\n          # Commande pour ex\xe9cuter votre script\r\n          # Exemple : ./mon_script.sh\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>i});var s=r(7294);const t={},o=s.createContext(t);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);